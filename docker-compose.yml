version: "3.9"
services:
  services:
    build:
      context: .
      dockerfile: services.Dockerfile
    ports:
      - "5000:5000"
    links:
      - redis
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "HOWLER_CASSANDRA_ENDPOINT=cassandra"
      - "HOWLER_KEYSPACE_CORE=howler"
      - "HOWLER_ENVIRONMENT=dev"
      - "HOWLER_SCOPE=openid"
  indexer:
    build:
      context: .
      dockerfile: indexer.Dockerfile
    ports:
      - "5001:5001"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "HOWLER_CASSANDRA_ENDPOINT=cassandra"
      - "HOWLER_KEYSPACE_INDEXER=howler_indexer"
      - "HOWLER_ENVIRONMENT=dev"
      - "HOWLER_SCOPE=openid" 
  config:
    build:
      context: .
      dockerfile: config.Dockerfile
    ports:
      - "5002:5002"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "HOWLER_CASSANDRA_ENDPOINT=cassandra"
      - "HOWLER_KEYSPACE_CONFIG=howler_config"
      - "HOWLER_ENVIRONMENT=dev"
      - "HOWLER_SCOPE=openid"
  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    ports:
      - "8000:8000"
  auth_gateway:
    build:
      context: .
      dockerfile: authgateway.Dockerfile
    ports:
      - "7000:7000"
    environment:
      - "ASPNETCORE_ENVIRONMENT=Development"
      - "HOWLER_CASSANDRA_ENDPOINT=cassandra"
      - "HOWLER_KEYSPACE_INDEXER=howler_indexer"
      - "HOWLER_ENVIRONMENT=dev"
      - "HOWLER_SCOPE=openid"
  redis:
    image: redis
  cassandra:
    image: cassandra
    container_name: cassandra
    hostname: cassandra
    # mem_limit: 2g
    healthcheck:
        test: ["CMD", "cqlsh", "-e", "describe keyspaces" ]
        interval: 5s
        timeout: 5s
        retries: 60
    ports:
      - "9042:9042"